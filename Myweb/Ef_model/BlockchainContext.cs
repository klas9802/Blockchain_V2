// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Myweb.Ef_model
{
    public partial class BlockchainContext : DbContext
    {

        public BlockchainContext()
        {
        }

        public BlockchainContext(DbContextOptions<BlockchainContext> options)
            : base(options)
        {
        }
        public virtual DbSet<CoinHistory> CoinHistory { get; set; }
        public virtual DbSet<Gaccount> Gaccount { get; set; }
        public virtual DbSet<GaccountGame> GaccountGame { get; set; }
        public virtual DbSet<GaccountTreasure> GaccountTreasure { get; set; }
        public virtual DbSet<Game> Game { get; set; }
        public virtual DbSet<Treasure> Treasure { get; set; }
        public virtual DbSet<User> User { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CoinHistory>(entity =>
            {
                entity.ToTable("coin_history");

                entity.HasIndex(e => e.UserId)
                    .HasName("fk_user_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Amount)
                    .HasColumnName("amount")
                    .HasColumnType("decimal(19,2)");

                entity.Property(e => e.Operation).HasColumnName("operation");

                entity.Property(e => e.TranDate)
                    .HasColumnName("tran_date")
                    .HasColumnType("datetime");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.CoinHistory)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("fk_user_id");
            });

            modelBuilder.Entity<Gaccount>(entity =>
            {
                entity.ToTable("gaccount");

                entity.HasIndex(e => e.UserId)
                    .HasName("fk_user_id2");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.UserId).HasColumnName("user_id");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Gaccount)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("fk_user_id2");
            });

            modelBuilder.Entity<GaccountGame>(entity =>
            {
                entity.ToTable("gaccount_game");

                entity.HasIndex(e => e.GaccountId)
                    .HasName("fk_game_id");

                entity.HasIndex(e => e.GameId)
                    .HasName("fk_gaccount_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.GaccountId).HasColumnName("gaccount_id");

                entity.Property(e => e.GameId).HasColumnName("game_id");

                entity.HasOne(d => d.Gaccount)
                    .WithMany(p => p.GaccountGame)
                    .HasForeignKey(d => d.GaccountId)
                    .HasConstraintName("fk_game_id");

                entity.HasOne(d => d.Game)
                    .WithMany(p => p.GaccountGame)
                    .HasForeignKey(d => d.GameId)
                    .HasConstraintName("fk_gaccount_id");
            });

            modelBuilder.Entity<GaccountTreasure>(entity =>
            {
                entity.ToTable("gaccount_treasure");

                entity.HasIndex(e => e.GaccountId)
                    .HasName("fk_gaccount_id_3");

                entity.HasIndex(e => e.TreasureId)
                    .HasName("fk_treasure_id");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.GaccountId).HasColumnName("gaccount_id");

                entity.Property(e => e.TreasureId).HasColumnName("treasure_id");

                entity.HasOne(d => d.Gaccount)
                    .WithMany(p => p.GaccountTreasure)
                    .HasForeignKey(d => d.GaccountId)
                    .HasConstraintName("fk_gaccount_id_3");

                entity.HasOne(d => d.Treasure)
                    .WithMany(p => p.GaccountTreasure)
                    .HasForeignKey(d => d.TreasureId)
                    .OnDelete(DeleteBehavior.Cascade)
                    .HasConstraintName("fk_treasure_id");
            });

            modelBuilder.Entity<Game>(entity =>
            {
                entity.ToTable("game");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Description)
                    .HasColumnName("description")
                    .HasColumnType("text")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(64)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            modelBuilder.Entity<Treasure>(entity =>
            {
                entity.ToTable("treasure");

                entity.HasIndex(e => e.GameId)
                    .HasName("fk_game_id_3");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.GameId).HasColumnName("game_id");

                entity.Property(e => e.Name)
                    .HasColumnName("name")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.HasOne(d => d.Game)
                    .WithMany(p => p.Treasure)
                    .HasForeignKey(d => d.GameId)
                    .HasConstraintName("fk_game_id_3");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("user");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Account)
                    .IsRequired()
                    .HasColumnName("account")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Addess)
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasColumnName("name")
                    .HasColumnType("varchar(32)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasColumnName("password")
                    .HasColumnType("varchar(255)")
                    .HasCharSet("utf8")
                    .HasCollation("utf8_general_ci");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}